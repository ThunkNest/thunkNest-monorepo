plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '5.4.0'
}

group = 'com.validate.monorepo'
version = project.hasProperty('version') ? project.version : new Date().format("YYYY") + ".0"

ext {
    springBootVersion = '3.1.4'
    springCloudVersion = '2022.0.3'
    jacksonVersion = '2.15.2'
    lombokVersion = '1.18.30'
    mongodbDriverVersion = '5.1.0'
    rabbitmqVersion = '5.17.1'
    springdocVersion = '2.1.0'
    jjwtVersion = '0.11.5'
    mockitoVersion = '5.5.0'
    junitVersion = '5.9.3'
}

allprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.openapi.generator'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        // Spring core dependencies
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-logging'
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework:spring-core'

        // Jackson
        implementation platform("com.fasterxml.jackson:jackson-bom:${jacksonVersion}")
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.core:jackson-core'

        // Lombok
        implementation "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        // RabbitMQ
        implementation 'com.rabbitmq:amqp-client'

        // MongoDB
        implementation "org.mongodb:mongodb-driver-sync:${mongodbDriverVersion}"
        implementation "org.mongodb:mongodb-driver-core:${mongodbDriverVersion}"

        // Faker
        implementation 'com.github.javafaker:javafaker:1.0.2'

        // Swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

        // Apache
        implementation 'org.apache.commons:commons-lang3:3.17.0'
        implementation 'org.apache.httpcomponents.client5:httpclient5:5.4-alpha2'

        // Elastic Search
        implementation 'co.elastic.clients:elasticsearch-java:8.9.0'
        implementation('org.elasticsearch.client:elasticsearch-rest-client') {
            version {
                strictly '8.9.0'
            }
        }

        // Testing dependencies
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"
        testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
        testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    test {
        useJUnitPlatform()
    }
}

task cleanBuild {
    doLast {
        delete 'build'
    }
}

build.dependsOn(cleanBuild)

subprojects {
    version = rootProject.version
}
